const path = require("node:path");
const { outputFile } = require("fs-extra");
const { join } = require("./join");
const { prettyJs } = require("./prettyJs");
const { writeTestContextCalls } = require("./writeTestContextCalls");

async function writeJsTestFile(post) {
  const testContent = await makeTestContent(post);

  await outputFile(
    path.join(
      "src",
      "www",
      "__test__",
      ...post.subPath,
      post.testName + ".spec.js",
    ),
    prettyJs(testContent),
  );

  return true;
}
exports.writeJsTestFile = writeJsTestFile;

async function makeTestContent(post) {
  let testContent = ``;
  testContent += makeTestHeader(post);
  testContent += makeTestBody(post);
  testContent += makeTestFooter();

  return testContent;
}

function makeTestHeader(post) {
  const fullPostNameValue = JSON.stringify(post.fullPostName);
  const md5Value = JSON.stringify(post.md5);

  return join(
    `import { runBeforeTestStarts, runWhenTestSuccessful } from '${post.parent}/util';`,
    `import { ${post.contextName} } from './${post.contextName}';`,
    ``,
    `// !!! IMPORTANT !!!`,
    `// This test file is AUTOGENERATED by yarn create-tests`,
    `// If you need to update it, run yarn create-tests`,
    `// DO NOT MODIFY manually. Keep running yarn create-tests instead,`,
    `// while editing your posts.`,
    ``,
    `test('${post.id}.md', async () => {`,
    `  await runBeforeTestStarts(${fullPostNameValue}, ${md5Value});`,
    ``,
    `  const context = new ${post.contextName}();`,
    `  await context.beforeTest();`,
    ``,
  );
}

function makeTestFooter() {
  return join(
    ``,
    `await context.afterTest();`,
    `await runWhenTestSuccessful();`,
    `})`,
  );
}

const jsHandler = {
  debug(text) {
    return `System.out.println(${JSON.stringify(text)});`;
  },
  invoke(call) {
    return `await context.${call.name}(${call.arguments
      .map((a) => a.value)
      .join(", ")}); //`;
  },
};

function makeTestBody(post) {
  return join(writeTestContextCalls(post, jsHandler));
}
