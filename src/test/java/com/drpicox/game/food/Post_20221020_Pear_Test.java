package com.drpicox.game.food;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221020_Pear_Test {

    @Autowired Post_20221020_Pear_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-10-20_pear", "e80690581d355a4cc75706d45f11eb3d");
        context.beforeTest();

        // # Pear                                          // # Pear
        // ### Eating a Pear                               // ### Eating a Pear
        context.givenThereAreNSCards(1, "Pear");           // * Given there are 1 "Pear" cards.
        context.givenThereAreNSCards(3, "Villager");       // * Given there are 3 "Villager" cards.
        context.theSumOfAllSTagsValueShouldBeN("Eats", 3); // * The sum of all "Eats" tags value should be 3.
        context.theSumOfAllSTagsValueShouldBeN("Food", 3); // * The sum of all "Food" tags value should be 3.
        context.endTheCurrentMoon();                       // * End the current moon.
        context.thereShouldBeNSCards(3, "Villager");       // * There should be 3 "Villager" cards.
        context.thereShouldBeNSCards(0, "Pear");           // * There should be 0 "Pear" cards.
        context.theSumOfAllSTagsValueShouldBeN("Eats", 3); // * The sum of all "Eats" tags value should be 3.
        context.theSumOfAllSTagsValueShouldBeN("Food", 0); // * The sum of all "Food" tags value should be 0.

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
