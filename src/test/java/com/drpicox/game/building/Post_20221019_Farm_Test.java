package com.drpicox.game.building;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221019_Farm_Test {

    @Autowired Post_20221019_Farm_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-10-19_farm", "38ae470fbeab40575ad5b00c57ddd8e8");
        context.beforeTest();

        // # farm                                                                    // # farm
        context.thereShouldBeNSCard(0, "Farm");                                      // * there should be 0 "Farm" card.
        context.givenNSNSNSCards(1, "Build Idea", 1, "Stone", 2, "Wood");            // * given 1 "Build Idea", 1 "Stone", 2 "Wood" cards
        context.givenThereIsTheSCardAtLevelNAndNXp("Build Idea", 2, 6);              // * Given there is the "Build Idea" card at level 2 and 6 xp
        context.endTheCurrentMoon();                                                 // * end the current moon.
        context.thereShouldBeNSCard(0, "Farm");                                      // * there should be 0 "Farm" card.
        context.thereShouldBeNSNSAndNSCards(0, "Stone", 0, "Wood", 0, "Berry Bush"); // * there should be 0 "Stone", 0 "Wood" and 0 "Berry Bush" cards.

        // ## how the farm works                                                     // ## how the farm works
        context.givenANewEmptyGame();                                                // * Given a new empty game
        context.givenThereAreNSCards(1, "Farm");                                     // * Given there are 1 "Farm" cards.
        context.givenThereAreNSCards(1, "Villager");                                 // * Given there are 1 "Villager" cards.
        context.givenThereAreNSCardsOrAnotherPlant(1, "Berry Bush");                 // * Given there are 1 "Berry Bush" cards or another plant.
        context.endTheCurrentMoon();                                                 // * end the current moon.
        context.thereShouldBeNSCards(5, "Berry");                                    // * There should be 5 "Berry" cards.
        context.thereShouldBeNSCards(1, "Farm");                                     // * There should be 1 "Farm" cards.
        context.thereShouldBeNSCards(1, "Villager");                                 // * There should be 1 "Villager" cards.
        context.thereShouldBeNSCards(1, "Berry Bush");                               // * There should be 1 "Berry Bush" cards.

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
