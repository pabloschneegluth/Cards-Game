package com.drpicox.game.enemy;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221127_Arpia_Test {

    @Autowired Post_20221127_Arpia_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-11-27_arpia", "7af7aca09deb48c664823f821c8d7c73");
        context.beforeTest();

        // # Arpia                                                                                              // # Arpia

        // ## How to find a arpia?                                                                              // ## How to find a arpia?
        context.givenANewGameWithAStackOfNSCardsAndNSCard(1, "Woods Stroll Idea", 1, "Militia");                // * Given a new game with a stack of 1 "Woods Stroll Idea" cards and 1 "Militia" card.
        context.givenThereIsTheSIdeaAtLevelNAndNXp("Woods Stroll Idea", 5, 0);                                  // * Given there is the "Woods Stroll Idea" idea at level 5 and 0 XP.
        context.theSMayCreateASCard("Woods Stroll Idea", "Arpia");                                              // * The "Woods Stroll Idea" may create a "Arpia" card.
        context.givenThatTheOddsAreThatWeWillFindASCardFromTheSCard("Arpia", "Woods Stroll Idea");              // * Given that the odds are that we will find a "Arpia" card from the "Woods Stroll Idea" card.
        context.endTheCurrentMoon();                                                                            // * End the current moon.
        context.thereShouldBeNStacksOfNSNSCardsAndNSCards(1, 1, "Woods Stroll Idea", 1, "Militia", 1, "Arpia"); // * There should be 1 stacks of 1 "Woods Stroll Idea", 1 "Militia" cards and 1 "Arpia" cards

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
