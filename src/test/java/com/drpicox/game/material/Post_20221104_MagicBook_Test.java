package com.drpicox.game.material;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221104_MagicBook_Test {

    @Autowired Post_20221104_MagicBook_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-11-04_magic_book", "788caa0bde68fad646246c367c81694c");
        context.beforeTest();

        // # Magic Book                                                                                                             // # Magic Book

        // ## How to obtain Magic Book?                                                                                             // ## How to obtain Magic Book?
        context.givenANewGameWithAStackOfNSCardNSCardNSAndNSCards(1, "Magic Component", 1, "Book", 1, "Build Idea", 1, "Villager"); // * Given a new game with a stack of 1 "Magic Component" card, 1 "Book" card, 1 "Build Idea", and 1 "Villager" cards.
        context.givenThereIsTheSIdeaAtLevelNAndNXp("Build Idea", 4, 0);                                                             // * Given there is the "Build Idea" idea at level 4 and 0 XP.
        context.theSMayCreateASCard("Build Idea", "Magic Book");                                                                    // * The "Build Idea" may create a "Magic Book" card.
        context.givenThatTheOddsAreThatWeWillGetASCardFromTheSCard("Magic Book", "Build Idea");                                     // * Given that the odds are that we will get a "Magic Book" card from the "Build Idea" card.
        context.endTheCurrentMoon();                                                                                                // * End the current moon.
        context.thereShouldBeNStacksOfNSNSAndNSCards(1, 1, "Build Idea", 1, "Villager", 1, "Magic Book");                           // * There should be 1 stacks of 1 "Build Idea", 1 "Villager" and 1 "Magic Book" cards.

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
