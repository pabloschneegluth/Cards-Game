package com.drpicox.game.material;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221104_MagicComponent_Test {

    @Autowired Post_20221104_MagicComponent_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-11-04_magic_component", "6004616e082e250708316b0f4d835313");
        context.beforeTest();

        // # Magic Component                                                                // # Magic Component

        // ## How to obtain Magic Component?                                                // ## How to obtain Magic Component?
        context.givenANewGameWithAStackOfNSCardsAndNSCards(1, "Chest", 1, "Key");           // * Given a new game with a stack of 1 "Chest" cards and 1 "Key" cards.
        context.theSMayCreateASCard("Chest", "Magic Book");                                 // * The "Chest" may create a "Magic Book" card.
        context.givenThatTheOddsAreThatWeWillGetASFromTheSCard("Magic Component", "Chest"); // * Given that the odds are that we will get a "Magic Component" from the "Chest" card.
        context.endTheCurrentMoon();                                                        // * End the current moon.
        context.thereShouldBeNStacksOfNSCards(1, 1, "Magic Component");                     // * There should be 1 stacks of 1 "Magic Component" cards.

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
