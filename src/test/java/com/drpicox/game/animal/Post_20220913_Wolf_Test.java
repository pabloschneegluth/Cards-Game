package com.drpicox.game.animal;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20220913_Wolf_Test {

    @Autowired Post_20220913_Wolf_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-09-13_wolf", "8abe31e1a44330eb9de8632e3284acbf");
        context.beforeTest();

        // # Wolf!                                                                                              // # Wolf!

        // ## How to find a wolf?                                                                               // ## How to find a wolf?
        context.givenANewGameWithAStackOfNSCardsAndNSCard(1, "Woods Stroll Idea", 1, "Villager");               // * Given a new game with a stack of 1 "Woods Stroll Idea" cards and 1 "Villager" card.
        context.givenThereIsTheSIdeaAtLevelNAndNXp("Woods Stroll Idea", 3, 0);                                  // * Given there is the "Woods Stroll Idea" idea at level 3 and 0 XP.
        context.theSMayCreateASCard("Woods Stroll Idea", "Wolf");                                               // * The "Woods Stroll Idea" may create a "Wolf" card.
        context.givenThatTheOddsAreThatWeWillFindASCardFromTheSCard("Wolf", "Woods Stroll Idea");               // * Given that the odds are that we will find a "Wolf" card from the "Woods Stroll Idea" card.
        context.endTheCurrentMoon();                                                                            // * End the current moon.
        context.thereShouldBeNStacksOfNSNSCardsAndNSCards(1, 1, "Woods Stroll Idea", 1, "Villager", 1, "Wolf"); // * There should be 1 stacks of 1 "Woods Stroll Idea", 1 "Villager" cards and 1 "Wolf" cards

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
