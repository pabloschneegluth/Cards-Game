package com.drpicox.game.location;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import com.drpicox.game.util.TestUtils;

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

@ActiveProfiles("test")
@SpringBootTest
@AutoConfigureMockMvc
public class Post_20221110_FindingThingsInLake_Test {

    @Autowired Post_20221110_FindingThingsInLake_Context context;
    @Autowired TestUtils testUtils;

    @Test public void testPost() throws Throwable {
        testUtils.runBeforeTestStarts("2022-11-10_finding_things_in_lake", "99d291a160b102dfbfdaa75000c8618f");
        context.beforeTest();

        // # Finding things in Lake                                                                                                         // # Finding things in Lake

        // ## | $CardName |                                                                                                                 // ## | $CardName |

        // ## |-----------|                                                                                                                 // ## |-----------|

        // ## | Fish      |                                                                                                                 // ## | Fish      |
        context.givenANewGameWithAStackOfNSNSNSAndNSCards(1, "Lake Stroll Idea", 1, "Lake", 1, "Villager", 1, "Fishing Rod");               // * Given a new game with a stack of 1 "Lake Stroll Idea", 1 "Lake", 1 "Villager" and 1 "Fishing Rod" cards.
        context.theSMayCreateASCard("Lake Stroll Idea", "Fish");                                                                            // * The "Lake Stroll Idea" may create a "Fish" card.
        context.givenThatTheOddsAreThatWeWillGetASFromTheSCard("Fish", "Lake");                                                             // * Given that the odds are that we will get a "Fish" from the "Lake" card.
        context.endTheCurrentMoon();                                                                                                        // * End the current moon.
        context.thereShouldBeNStacksOfNSNSNSNSAndNSCards(1, 1, "Lake Stroll Idea", 1, "Lake", 1, "Villager", 1, "Fishing Rod", 1, "Fish");  // * There should be 1 stacks of 1 "Lake Stroll Idea", 1 "Lake", 1 "Villager", 1 "Fishing Rod" and 1 "Fish" cards.
        // # Finding things in Lake                                                                                                         // # Finding things in Lake

        // ## | $CardName |                                                                                                                 // ## | $CardName |

        // ## |-----------|                                                                                                                 // ## |-----------|

        // ## | Shark     |                                                                                                                 // ## | Shark     |
        context.givenANewGameWithAStackOfNSNSNSAndNSCards(1, "Lake Stroll Idea", 1, "Lake", 1, "Villager", 1, "Fishing Rod");               // * Given a new game with a stack of 1 "Lake Stroll Idea", 1 "Lake", 1 "Villager" and 1 "Fishing Rod" cards.
        context.theSMayCreateASCard("Lake Stroll Idea", "Shark");                                                                           // * The "Lake Stroll Idea" may create a "Shark" card.
        context.givenThatTheOddsAreThatWeWillGetASFromTheSCard("Shark", "Lake");                                                            // * Given that the odds are that we will get a "Shark" from the "Lake" card.
        context.endTheCurrentMoon();                                                                                                        // * End the current moon.
        context.thereShouldBeNStacksOfNSNSNSNSAndNSCards(1, 1, "Lake Stroll Idea", 1, "Lake", 1, "Villager", 1, "Fishing Rod", 1, "Shark"); // * There should be 1 stacks of 1 "Lake Stroll Idea", 1 "Lake", 1 "Villager", 1 "Fishing Rod" and 1 "Shark" cards.

        context.afterTest();
        testUtils.runWhenTestSuccessful();
    }

}
