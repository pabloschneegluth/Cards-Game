import { runBeforeTestStarts, runWhenTestSuccessful } from "../../util";
import { Post_20220719_VillagersEatFood_Context } from "./Post_20220719_VillagersEatFood_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-07-19_villagers_eat_food.md", async () => {
  await runBeforeTestStarts(
    "2022-07-19_villagers_eat_food",
    "9869885987d02408d5afe666704a1d63"
  );

  const context = new Post_20220719_VillagersEatFood_Context();
  await context.beforeTest();

  // # Villagers Eat Food!                                           // # Villagers Eat Food!

  // ## Berries are food                                             // ## Berries are food
  await context.givenANewExample(); //                               // * Given a new example.
  await context.givenThereAreNSCards(1, "Berry"); //                 // * Given there are 1 "Berry" cards.
  await context.theSCardShouldHaveNInSTag("Berry", 1, "Food"); //    // * The "Berry" card should have 1 in "Food" tag.
  await context.givenANewExample(); //                               // * Given a new example.
  await context.givenThereAreNSCards(1, "Villager"); //              // * Given there are 1 "Villager" cards.
  await context.theSCardShouldHaveNInSTag("Villager", 1, "Eats"); // // * The "Villager" card should have 1 in "Eats" tag.

  // ## Moons                                                        // ## Moons
  await context.givenANewExample(); //                               // * Given a new example.
  await context.givenThereAreNSCards(1, "Villager"); //              // * Given there are 1 "Villager" cards.
  await context.givenThereAreNSCards(1, "Berry"); //                 // * Given there are 1 "Berry" cards.
  await context.endTheCurrentMoon(); //                              // * End the current moon.
  await context.thereShouldBeNSCards(0, "Berry"); //                 // * There should be 0 "Berry" cards.
  await context.thereShouldBeNSCards(1, "Villager"); //              // * There should be 1 "Villager" cards.

  // ## Starving                                                     // ## Starving
  await context.givenANewExample(); //                               // * Given a new example.
  await context.givenThereAreNSCards(0, "Berry"); //                 // * Given there are 0 "Berry" cards.
  await context.givenThereAreNSCards(1, "Villager"); //              // * Given there are 1 "Villager" cards.
  await context.endTheCurrentMoon(); //                              // * End the current moon.
  await context.thereShouldBeNSCards(0, "Berry"); //                 // * There should be 0 "Berry" cards.
  await context.thereShouldBeNSCards(0, "Villager"); //              // * There should be 0 "Villager" cards.
  await context.givenANewExample(); //                               // * Given a new example.
  await context.givenThereAreNSCards(0, "Berry"); //                 // * Given there are 0 "Berry" cards.
  await context.givenThereAreNSCards(1, "Villager"); //              // * Given there are 1 "Villager" cards.
  await context.endTheCurrentMoon(); //                              // * End the current moon.
  await context.thereShouldBeNSCards(1, "Corpse"); //                // * There should be 1 "Corpse" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
