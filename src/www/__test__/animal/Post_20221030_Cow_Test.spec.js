import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20221030_Cow_Context } from "./Post_20221030_Cow_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-10-30_cow.md", async () => {
  await runBeforeTestStarts(
    "animal\\2022-10-30_cow",
    "34697877c1256e34ef9efd578ccbfd6a"
  );

  const context = new Post_20221030_Cow_Context();
  await context.beforeTest();

  // # Cow!                                                                                                  // # Cow!
  // # How to find a cow                                                                                     // # How to find a cow
  await context.givenANewGameWithAStackOfNSCardsAndNSCards(
    1,
    "Woods Stroll Idea",
    1,
    "Villager"
  ); //        // * Given a new game with a stack of 1 "Woods Stroll Idea" cards and 1 "Villager" cards.
  await context.givenThereIsTheSIdeaAtLevelNAndNXp("Woods Stroll Idea", 4, 20); //                           // * Given there is the "Woods Stroll Idea" idea at level 4 and 20 XP.
  await context.theSMayCreateASCard("Woods Stroll Idea", "Cow"); //                                          // * The "Woods Stroll Idea" may create a "Cow" card.
  await context.givenThatTheOddsAreThatWeWillGetASFromTheSCard(
    "Cow",
    "Woods Stroll Idea"
  ); //               // * Given that the odds are that we will get a "Cow" from the "Woods Stroll Idea" card.
  await context.endTheCurrentMoon(); //                                                                      // * End the current moon.
  await context.thereShouldBeNStacksOfNSNSAndNSCards(
    1,
    1,
    "Woods Stroll Idea",
    1,
    "Villager",
    1,
    "Cow"
  ); // // * There should be 1 stacks of 1 "Woods Stroll Idea", 1 "Villager" and 1 "Cow" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
