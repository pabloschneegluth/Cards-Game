import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20221019_Farm_Context } from "./Post_20221019_Farm_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-10-19_farm.md", async () => {
  await runBeforeTestStarts(
    "2022-10-19_farm",
    "38ae470fbeab40575ad5b00c57ddd8e8"
  );

  const context = new Post_20221019_Farm_Context();
  await context.beforeTest();

  // # farm                                                                             // # farm
  await context.thereShouldBeNSCard(0, "Farm"); //                                      // * there should be 0 "Farm" card.
  await context.givenNSNSNSCards(1, "Build Idea", 1, "Stone", 2, "Wood"); //            // * given 1 "Build Idea", 1 "Stone", 2 "Wood" cards
  await context.givenThereIsTheSCardAtLevelNAndNXp("Build Idea", 2, 6); //              // * Given there is the "Build Idea" card at level 2 and 6 xp
  await context.endTheCurrentMoon(); //                                                 // * end the current moon.
  await context.thereShouldBeNSCard(0, "Farm"); //                                      // * there should be 0 "Farm" card.
  await context.thereShouldBeNSNSAndNSCards(
    0,
    "Stone",
    0,
    "Wood",
    0,
    "Berry Bush"
  ); // // * there should be 0 "Stone", 0 "Wood" and 0 "Berry Bush" cards.

  // ## how the farm works                                                              // ## how the farm works
  await context.givenANewEmptyGame(); //                                                // * Given a new empty game
  await context.givenThereAreNSCards(1, "Farm"); //                                     // * Given there are 1 "Farm" cards.
  await context.givenThereAreNSCards(1, "Villager"); //                                 // * Given there are 1 "Villager" cards.
  await context.givenThereAreNSCardsOrAnotherPlant(1, "Berry Bush"); //                 // * Given there are 1 "Berry Bush" cards or another plant.
  await context.endTheCurrentMoon(); //                                                 // * end the current moon.
  await context.thereShouldBeNSCards(5, "Berry"); //                                    // * There should be 5 "Berry" cards.
  await context.thereShouldBeNSCards(1, "Farm"); //                                     // * There should be 1 "Farm" cards.
  await context.thereShouldBeNSCards(1, "Villager"); //                                 // * There should be 1 "Villager" cards.
  await context.thereShouldBeNSCards(1, "Berry Bush"); //                               // * There should be 1 "Berry Bush" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
