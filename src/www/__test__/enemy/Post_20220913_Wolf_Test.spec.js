import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20220913_Wolf_Context } from "./Post_20220913_Wolf_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-09-13_wolf.md", async () => {
  await runBeforeTestStarts(
    "enemy\\2022-09-13_wolf",
    "c25d02dd58b7530281e269254f2b133b"
  );

  const context = new Post_20220913_Wolf_Context();
  await context.beforeTest();

  // # Wolf!                                                                                                       // # Wolf!

  // ## How to find a wolf?                                                                                        // ## How to find a wolf?
  await context.givenANewGameWithAStackOfNSCardsAndNSCard(
    1,
    "Woods Stroll Idea",
    1,
    "Villager"
  ); //               // * Given a new game with a stack of 1 "Woods Stroll Idea" cards and 1 "Villager" card.
  await context.givenThereIsTheSIdeaAtLevelNAndNXp("Woods Stroll Idea", 3, 0); //                                  // * Given there is the "Woods Stroll Idea" idea at level 3 and 0 XP.
  await context.theSMayCreateASCard("Woods Stroll Idea", "Wolf"); //                                               // * The "Woods Stroll Idea" may create a "Wolf" card.
  await context.givenThatTheOddsAreThatWeWillFindASCardFromTheSCard(
    "Wolf",
    "Woods Stroll Idea"
  ); //               // * Given that the odds are that we will find a "Wolf" card from the "Woods Stroll Idea" card.
  await context.endTheCurrentMoon(); //                                                                            // * End the current moon.
  await context.thereShouldBeNStacksOfNSNSCardsAndNSCards(
    1,
    1,
    "Woods Stroll Idea",
    1,
    "Villager",
    1,
    "Wolf"
  ); // // * There should be 1 stacks of 1 "Woods Stroll Idea", 1 "Villager" cards and 1 "Wolf" cards

  await context.afterTest();
  await runWhenTestSuccessful();
});
