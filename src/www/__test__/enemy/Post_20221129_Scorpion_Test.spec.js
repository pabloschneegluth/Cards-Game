import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20221129_Scorpion_Context } from "./Post_20221129_Scorpion_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-11-29_scorpion.md", async () => {
  await runBeforeTestStarts(
    "enemy/2022-11-29_scorpion",
    "01c9d35dbe8f0dc2b205ed02b7ec5314"
  );

  const context = new Post_20221129_Scorpion_Context();
  await context.beforeTest();

  // # Scorpion                                                                                                                     // # Scorpion

  // ## How a Scorpion appears?                                                                                                     // ## How a Scorpion appears?
  await context.givenANewGameWithAStackOfNSNSAndNSCards(
    1,
    "Dessert Stroll Idea",
    1,
    "Dessert",
    1,
    "Villager"
  ); //                  // * Given a new game with a stack of 1 "Dessert Stroll Idea", 1 "Dessert" and 1 "Villager" cards.
  await context.givenThereIsTheSIdeaAtLevelNAndNXp("Dessert Stroll Idea", 2, 0); //                                                 // * Given there is the "Dessert Stroll Idea" idea at level 2 and 0 XP.
  await context.theSMayCreateASCard("Dessert Stroll Idea", "Scorpion"); //                                                          // * The "Dessert Stroll Idea" may create a "Scorpion" card.
  await context.endTheCurrentMoon(); //                                                                                             // * End the current moon.
  await context.thereShouldBeNStacksOfNSNSNSAndNSCards(
    1,
    1,
    "Dessert Stroll Idea",
    1,
    "Dessert",
    1,
    "Villager",
    1,
    "Scorpion"
  ); // // * There should be 1 stacks of 1 "Dessert Stroll Idea", 1 "Dessert", 1 "Villager" and 1 "Scorpion" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
