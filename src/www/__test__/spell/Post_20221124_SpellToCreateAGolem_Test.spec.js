import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20221124_SpellToCreateAGolem_Context } from "./Post_20221124_SpellToCreateAGolem_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-11-24_spell_to_create_a_golem.md", async () => {
  await runBeforeTestStarts(
    "spell\\2022-11-24_spell_to_create_a_golem",
    "462517fabde3ae570071a861c4bd05c4"
  );

  const context = new Post_20221124_SpellToCreateAGolem_Context();
  await context.beforeTest();

  // # Spell To Create A Golem                                                                                         // # Spell To Create A Golem
  // # How to create the Spell?                                                                                        // # How to create the Spell?
  await context.givenANewGameWithAStackOfNSNSNSNSNS(
    1,
    "Magic Idea",
    1,
    "Wizard",
    5,
    "Bone",
    3,
    "Iron",
    1,
    "Gold"
  ); // // * Given a new game with a stack of 1 "Magic Idea", 1 "Wizard", 5 "Bone", 3 "Iron", 1"Gold".
  await context.theSMayCreateASCard("Magic Idea", "Golem Spell"); //                                                   // * The "Magic Idea" may create a "Golem Spell" card.
  await context.endTheCurrentMoon(); //                                                                                // * End the current moon.
  await context.thereShouldBeNStacksOfNSNSAndNSCards(
    1,
    1,
    "Magic Idea",
    1,
    "Wizard",
    1,
    "Golem Spell"
  ); //            // * There should be 1 stacks of 1 "Magic Idea", 1 "Wizard" and 1 "Golem Spell" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
