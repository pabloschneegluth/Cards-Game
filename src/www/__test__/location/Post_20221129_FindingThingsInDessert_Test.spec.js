import { runBeforeTestStarts, runWhenTestSuccessful } from "../util";
import { Post_20221129_FindingThingsInDessert_Context } from "./Post_20221129_FindingThingsInDessert_Context";

// !!! IMPORTANT !!!
// This test file is AUTOGENERATED by yarn create-tests
// If you need to update it, run yarn create-tests
// DO NOT MODIFY manually. Keep running yarn create-tests instead,
// while editing your posts.

test("2022-11-29_finding_things_in_dessert.md", async () => {
  await runBeforeTestStarts(
    "location/2022-11-29_finding_things_in_dessert",
    "70bd9569ab49ab2c8a5a8c86c4a6b881"
  );

  const context = new Post_20221129_FindingThingsInDessert_Context();
  await context.beforeTest();

  // # Finding things in Dessert                                                                                                    // # Finding things in Dessert

  // ## | $CardName   |                                                                                                             // ## | $CardName   |

  // ## |-------------|                                                                                                             // ## |-------------|

  // ## | Scorpion    |                                                                                                             // ## | Scorpion    |
  await context.givenANewGameWithAStackOfNSNSAndNS(
    1,
    "Dessert Stroll Idea",
    1,
    "Dessert",
    1,
    "Villager"
  ); //                       // * Given a new game with a stack of 1 "Dessert Stroll Idea", 1 "Dessert" and 1 "Villager".
  await context.theSMayCreateASCard("Dessert Stroll Idea", "Scorpion"); //                                                          // * The "Dessert Stroll Idea" may create a "Scorpion" card.
  await context.givenThatTheOddsAreThatWeWillGetASFromTheSCard(
    "Scorpion",
    "Dessert Stroll Idea"
  ); //                               // * Given that the odds are that we will get a "Scorpion" from the "Dessert Stroll Idea" card.
  await context.endTheCurrentMoon(); //                                                                                             // * End the current moon.
  await context.thereShouldBeNStacksOfNSNSNSAndNSCards(
    1,
    1,
    "Dessert Stroll Idea",
    1,
    "Dessert",
    1,
    "Villager",
    1,
    "Scorpion"
  ); // // * There should be 1 stacks of 1 "Dessert Stroll Idea", 1 "Dessert", 1 "Villager" and 1 "Scorpion" cards.

  await context.afterTest();
  await runWhenTestSuccessful();
});
